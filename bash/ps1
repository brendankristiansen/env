# Fill with minuses
# (this is recalculated every time the prompt is shown in function
# prompt_command):
fill="--- "

reset_style='\[\033[00m\]'
status_style=$reset_style'\[\033[0;90m\]' # gray color; use 0;37m for lighter color
prompt_style=$reset_style
command_style=$reset_style'\[\033[1;31m\]' # bold red


# get status for virtual environment
function parse_virtual_env {
    [[ $VIRTUAL_ENV != '' ]] && echo "(${VIRTUAL_ENV##*/})"
}

# Prompt variable:
case `uname` in 
    Linux)
        PS1="$status_style"'$fill \t\n'"$prompt_style"'${debian_chroot:+($debian_chroot)} \u@\h:\W$(parse_git_branch) $'"$command_style "
        ;; 
    Darwin)
        PS1="$(parse_virtual_env)$status_style"'$fill \t\n'"$prompt_style"'\u@\h:\W$(parse_git_branch) $'"$command_style "
        ;; 
    *)
        echo "Unknown system found when creating PS1.  Only Linux and Darwin supported." \
            "Using system default."
        ;; 
esac

# Reset color for command output
# (this one is invoked every time before a command is executed):
trap 'echo -ne "\033[00m"' DEBUG

# get the status for git
function parse_git_dirty {
      [[ $(git status 2> /dev/null | \
              tail -n1) != "nothing to commit, working directory clean" ]] && echo "*"
}
function parse_git_branch {
      git branch --no-color 2> /dev/null | \
          sed -e '/^[^*]/d' -e "s/* \(.*\)/[\1$(parse_git_dirty)]/"
}
 
# generate the prompt
function prompt_command {

    # create a $fill of all screen width minus the time string and a space:
    # Subtract 9 for the size of \t
    # and num chars in venv + 2 for paren wrapping
    venv=`parse_virtual_env`
    let fillsize=${COLUMNS}-9-${#venv}
    fill=""
    while [ "$fillsize" -gt "0" ]
    do
        fill="-${fill}" # fill with underscores to work on
        let fillsize=${fillsize}-1
    done
}

PROMPT_COMMAND=prompt_command


