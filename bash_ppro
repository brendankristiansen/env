# environment variables needed for AWS
export JAVA_HOME=$(/usr/libexec/java_home)
export AMAZON_HOME=/usr/local/amazon
export EC2_HOME=${AMAZON_HOME}/ec2/ec2-api-tools-1.6.13.0
export EB_HOME=${AMAZON_HOME}/eb/AWS-ElasticBeanstalk-CLI-2.6.0/eb/macosx/python2.7
export PATH=$PATH:$EC2_HOME/bin:$EB_HOME/
export RDS_DB_NAME='productionpro'
export RDS_USERNAME=''
export RDS_PASSWORD=''
export RDS_HOSTNAME=''
export RDS_PORT=''

# AWS environment variables (AWS_ACCESS_KEY, AWS_SECRET_KEY)
# are pulled in by the line (called * below):
#   > source decrypt_to_ramdisk -s ~/Dropbox/env/bash/keys.gpg
# Some amazon services such as boto use different names for these 
# values.  We set them here, note that changes in the AWS key
# requre restarting the shell.
export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY}
export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_KEY}

# Various possible values for (FIREBASE_ROOT, FIREBASE_SECRET) are pulled in
# with * as well.  We set the required turbo turtle environment variables.
export FIREBASE_ROOT=${FIREBASE_DEV_00_URL}
export FIREBASE_SECRET=${FIREBASE_DEV_00_SECRET}

# This flag specifies if we should run the ppro code in debug or not
# Set to 1 for debug and 0 for not debug.
export PPRO_ALLOW_DEBUG='1'

# This flag specifies if development is locally, which changes attributes like
# the storage backend.  
# Set to 1 for local development and 0 for not local development
export PPRO_LOCAL_DEV='1'

# this flag speciffies the suffix for bucket names when working with amazon. 
# by convention, we use the <username>_<hostname>
export PPRO_DEPLOYMENT_NAME="`whoami`_`hostname -s`"

# When doing local development, it is sometimes useful to have these nice curl
# routines.

# set the server to run on
#export PPRO_ADDRESS='http://127.0.0.1:8000' 
ppro_set_local() { export PPRO_ADDRESS='http://127.0.0.1:8000'; }
ppro_set_internal() { export PPRO_ADDRESS='http://internal.production.pro:8000'; }
ppro_set_alphatest() { export PPRO_ADDRESS='https://alphatest.production.pro'; }
ppro_set_masterpiece() { export PPRO_ADDRESS='https://alphatest.production.pro'; }

# default to local
ppro_set_local

ppro_get()  { curl -v -H "Authorization: Token $PPRO_TOKEN" -X GET $PPRO_ADDRESS$1; }
ppro_post() { curl -v -H "Authorization: Token $PPRO_TOKEN" -X POST $PPRO_ADDRESS$1 -d "$2"; }
ppro_post_json() { 
    curl -v \
        -H "Content-Type: application/json" \
        -H "Authorization: Token $PPRO_TOKEN" \
        -X POST $PPRO_ADDRESS$1 -d "$2"; 
}
ppro_put()  { curl -v -H "Authorization: Token $PPRO_TOKEN" -X PUT $PPRO_ADDRESS$1 -d "$2"; }
ppro_patch()  { curl -v -H "Authorization: Token $PPRO_TOKEN" -X PATCH $PPRO_ADDRESS$1 -d "$2"; }
ppro_upload()  { \
    curl -i -v \
        -H "Authorization: Token $PPRO_TOKEN"  \
        -H "Content-Type: multipart/form-data" \
        -F "file=@$1" \
        -X POST $PPRO_ADDRESS/ppro/media/library/creative_force/
}
ppro_token() { 
    if [ $# -eq 1 ]; then
        _ppro_username=$1
        read -s -p "Enter Password: " _ppro_userpass
    elif [ $# -eq 2 ]; then
        _ppro_username=$1
        _ppro_userpass=$2
    else
        echo "usage: ppro_token username [password]"
        return
    fi
    export PPRO_TOKEN="`curl -v -X POST $PPRO_ADDRESS/ppro/token/ \
                --data-urlencode "username=$_ppro_username" \
                --data-urlencode "password=$_ppro_userpass" \
            | tail -n1 | cut -d\\" -f6`"
    echo "**RESPONSE** $PPRO_TOKEN"
    unset _ppro_username
    unset _ppro_userpass
}
